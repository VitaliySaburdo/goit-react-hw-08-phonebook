{"version":3,"file":"static/js/503.d97233e0.chunk.js","mappings":"uRAIaA,EAAOC,EAAAA,GAAAA,KAAH,yMAUJC,EAAMD,EAAAA,GAAAA,IAAH,6SAGUE,GAWbC,EAAQH,EAAAA,GAAAA,GAAH,2G,IAMGA,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kQ,kBCxBZK,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAGDG,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBY,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAAM,CAAED,OAAAA,IAClB,IAGH,OACE,SAACjB,EAAD,WACE,UAACF,EAAD,CAAMkB,SAAUH,EAAOM,aAAvB,WACE,SAACjB,EAAD,qBACA,SAACkB,EAAA,EAAD,CACEC,GAAI,CACFC,OAAQ,IAEVC,YAAY,oBACZC,WAAS,EACTC,KAAK,QACLC,OAAO,OACPC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOjB,EAAOI,OAAOX,MACrByB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ5B,OAAS6B,QAAQtB,EAAOuB,OAAO9B,OACrD+B,WAAYxB,EAAOqB,QAAQ5B,OAASO,EAAOuB,OAAO9B,SAEpD,SAACc,EAAA,EAAD,CACEC,GAAI,CAAEC,OAAQ,IACdC,YAAY,uBACZC,WAAS,EACTC,KAAK,QACLC,OAAO,OACPC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOjB,EAAOI,OAAOT,SACrBuB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ1B,UAAY2B,QAAQtB,EAAOuB,OAAO5B,UACxD6B,WAAYxB,EAAOqB,QAAQ1B,UAAYK,EAAOuB,OAAO5B,YAEvD,SAAC+B,EAAA,EAAD,CAEEC,MAAM,UACNC,QAAQ,YACRjB,WAAS,EACTc,KAAK,SALP,uBAYP,EChFc,SAASI,IACtB,OACE,4BACE,sCACA,SAAChC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../../images/Log.webp';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  position: absolute;\n  margin-top: 230px;\n  width: 320px;\n  border-radius: 5px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  background-color: #d7daec;\n  padding: 25px;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  height: 700px;\n  background-image: url(${background});\n  margin-left: auto;\n  margin-right: auto;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  padding: 0 0 20px 0;\n  border-bottom: 1px solid silver;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 93%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n  background-color: #aae5ff;\n`;\n","// Exenple\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { logIn } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Form, Box, Title } from './LoginForm.styled';\nimport TextField from '@mui/material/TextField';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(logIn({ values }));\n    },\n  });\n\n  return (\n    <Box>\n      <Form onSubmit={formik.handleSubmit}>\n        <Title>Login</Title>\n        <TextField\n          sx={{\n            height: 65,\n          }}\n          placeholder=\"Please your email\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Please your password\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button\n          // sx={{ border: '1px solid', borderRadius: '25px' }}\n          color=\"primary\"\n          variant=\"contained\"\n          fullWidth\n          type=\"submit\"\n        >\n          Login\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import { logIn } from 'redux/auth/operations';\n// import {\n//   Box,\n//   Forma,\n//   Label,\n//   Button,\n//   Input,\n//   MassageEmail,\n//   MassagePass,\n// } from './LoginForm.styled';\n// import { Formik, ErrorMessage } from 'formik';\n// import { object, string } from 'yup';\n// // import TextField from '@mui/material/TextField';\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n\n//   const initialValues = { email: '', password: '' };\n\n//   const validationSchema = object({\n//     email: string('Enter your email')\n//       .email('Enter a valid email')\n//       .required('Email is required'),\n//     password: string().min(6).max(16).required(),\n//   });\n\n//   const handleSubmit = (values, { resetForm }) => {\n//     dispatch(logIn({ values }));\n//     const { email, password } = values;\n//     if (email === '' || password === '') {\n//       alert('Fill all the fields');\n//     }\n//     resetForm();\n//   };\n\n//   return (\n//     <Box>\n//       <Formik\n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={handleSubmit}\n//       >\n//         <Forma autoComplete=\"on\">\n//           <Label>\n//             Email\n//             {/* <TextField label=\"Email\" /> */}\n//             <Input type=\"email\" name=\"email\" />\n//             <ErrorMessage component={MassageEmail} name=\"email\" />\n//           </Label>\n//           <Label>\n//             Password\n//             <Input type=\"password\" name=\"password\" />\n//             <ErrorMessage component={MassagePass} name=\"password\" />\n//           </Label>\n//           <Button type=\"submit\">Log In</Button>\n//         </Forma>\n//       </Formik>\n//     </Box>\n//   );\n// };\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","Box","background","Title","Field","validationSchema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","logIn","handleSubmit","TextField","sx","height","placeholder","fullWidth","size","margin","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Login"],"sourceRoot":""}