{"version":3,"file":"static/js/854.7ce0d5c2.chunk.js","mappings":"qRAIaA,EAAOC,EAAAA,GAAAA,KAAH,yMAUJC,EAAMD,EAAAA,GAAAA,IAAH,6SAGUE,G,IAWLF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kQ,kBClBZI,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GAAW,mBAAmBE,SAAS,oBAC7CC,MAAOH,EAAAA,GACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNE,MAAO,GACPC,SAAU,IAEZL,iBAAkBA,EAClBa,SAAU,SAAAC,GACRN,GAASO,EAAAA,EAAAA,IAASD,GACnB,IAGH,OACE,SAACjB,EAAD,WACE,UAACF,EAAD,CAAMkB,SAAUH,EAAOM,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,GAAI,CAAEC,OAAQ,IACdC,YAAY,mBACZC,WAAS,EACTC,KAAK,QACLC,OAAO,OACPC,GAAG,OACHtB,KAAK,OACLuB,MAAM,OACNC,MAAOhB,EAAOI,OAAOZ,KACrByB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQ5B,MAAQ6B,QAAQrB,EAAOsB,OAAO9B,MACpD+B,WAAYvB,EAAOoB,QAAQ5B,MAAQQ,EAAOsB,OAAO9B,QAEnD,SAACe,EAAA,EAAD,CACEC,GAAI,CAAEC,OAAQ,IACdC,YAAY,oBACZC,WAAS,EACTC,KAAK,QACLC,OAAO,OACPC,GAAG,QACHtB,KAAK,QACLuB,MAAM,QACNC,MAAOhB,EAAOI,OAAOV,MACrBuB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQ1B,OAAS2B,QAAQrB,EAAOsB,OAAO5B,OACrD6B,WAAYvB,EAAOoB,QAAQ1B,OAASM,EAAOsB,OAAO5B,SAEpD,SAACa,EAAA,EAAD,CACEC,GAAI,CAAEC,OAAQ,IACdC,YAAY,uBACZC,WAAS,EACTC,KAAK,QACLC,OAAO,OACPC,GAAG,WACHtB,KAAK,WACLuB,MAAM,WACNS,KAAK,WACLR,MAAOhB,EAAOI,OAAOT,SACrBsB,SAAUjB,EAAOkB,aACjBC,MAAOnB,EAAOoB,QAAQzB,UAAY0B,QAAQrB,EAAOsB,OAAO3B,UACxD4B,WAAYvB,EAAOoB,QAAQzB,UAAYK,EAAOsB,OAAO3B,YAEvD,SAAC8B,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYhB,WAAS,EAACa,KAAK,SAA3D,0BAMP,ECvFc,SAASI,IACtB,OACE,4BACE,6CACA,SAAC/B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport background from '../../images/Log.webp';\nimport { Field } from 'formik';\n\nexport const Form = styled.form`\n  position: absolute;\n  margin-top: 190px;\n  width: 320px;\n  border-radius: 5px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  background-color: #d7daec;\n  padding: 25px;\n`;\n\nexport const Box = styled.div`\n  position: relative;\n  height: 700px;\n  background-image: url(${background});\n  margin-left: auto;\n  margin-right: auto;\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n  margin-top: 30px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 93%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n  background-color: #aae5ff;\n`;\n","//\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { Form, Box } from './RegisterForm.styled';\nimport TextField from '@mui/material/TextField';\n\nconst validationSchema = yup.object({\n  name: yup.string('Enter your Name').required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      dispatch(register(values));\n    },\n  });\n\n  return (\n    <Box>\n      <Form onSubmit={formik.handleSubmit}>\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Please your name\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Please your email\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          sx={{ height: 65 }}\n          placeholder=\"Please your password\"\n          fullWidth\n          size=\"small\"\n          margin=\"none\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/operations';\n// import { Box, Form, Input, Label, Button } from './RegisterForm.styled';\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const name = form.elements.name.value;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     if (name.trim() === '' || email.trim() === '' || password.trim() === '') {\n//       return alert('Fill in all fields please');\n//     }\n//     dispatch(\n//       register({\n//         name: name,\n//         email: email,\n//         password: password,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <Box>\n//       <Form onSubmit={handleSubmit} autoComplete=\"off\">\n//         <Label>\n//           Username\n//           <Input type=\"text\" name=\"name\" />\n//         </Label>\n//         <Label>\n//           Email\n//           <Input type=\"email\" name=\"email\" />\n//         </Label>\n//         <Label>\n//           Password\n//           <Input type=\"password\" name=\"password\" />\n//         </Label>\n//         <Button type=\"submit\">Register</Button>\n//       </Form>\n//     </Box>\n//   );\n// };\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","Box","background","Field","validationSchema","yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","register","handleSubmit","TextField","sx","height","placeholder","fullWidth","size","margin","id","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","Register"],"sourceRoot":""}