{"version":3,"file":"static/js/434.1166e6b8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/RenderContactsList/RenderContactList.styled.js","components/RenderContactsList/RenderContactsList.js","components/Container/Container.styled.js","components/Container/Container.js","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 10px;\n  margin-bottom: 30px;\n  width: 440px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  margin-top: 15px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  font-size: 28px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 95%;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n  /* background-color: #7fcfff; */\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  width: 180px;\n  height: 40px;\n  cursor: pointer;\n  font-size: 16px;\n  color: white;\n  background-color: green;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #13ba00;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Title,\n  Form,\n  // Input,\n  Label,\n  Button,\n} from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isNameInContact = contacts.find(\n    contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n  );\n\n  const data = {\n    name: name,\n    number: number,\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isNameInContact) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      dispatch(addContact(data));\n    }\n    // e.target.reset();\n    resetForm();\n  };\n\n  const handleNameChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <TextField\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={name}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          <TextField\n            fullWidth\n            size=\"small\"\n            type=\"tel\"\n            name=\"number\"\n            label=\"Number\"\n            value={number}\n            onChange={handleNameChange}\n            pattern=\"\\d{1,5}\"\n            minlength=\"7\"\n            maxlength=\"12\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Container>\n  );\n}\n\nContactForm.prototype = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 10px;\n  width: 420px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 15px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 10px;\n  margin-top: 15px;\n`;\n","import React from 'react';\nimport { Container, Label } from './Filter.styled';\nimport { findContact } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(findContact(e.target.value));\n  };\n\n  return (\n    <Container>\n      <Label>\n        <TextField\n          sx={{ width: 440 }}\n          // fullWidth\n          size=\"small\"\n          type=\"text\"\n          label=\"Find contact by name\"\n          value={filter}\n          onChange={changeFilter}\n        />\n      </Label>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: block;\n  width: 440px;\n  margin-left: auto;\n  margin-right: auto;\n\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 30px;\n  cursor: pointer;\n  font-size: 16px;\n  color: white;\n  background-color: #de0000;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  border: none;\n  outline: none;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item, Button, List } from './RenderContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const RenderContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return (\n    <List>\n      {visibleContact.map(contact => (\n        <Item key={contact.id}>\n          {contact.name}: {contact.number}\n          <Button onClick={() => dispatch(deleteContact(contact.id))}>\n            delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nRenderContacts.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport background from '../../images/Hero.webp';\n\nexport const Shell = styled.div`\n  position: relative;\n  height: 700px;\n  background-image: url(${background});\n  margin-left: auto;\n  margin-right: auto;\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport const Box = styled.div`\n  position: absolute;\n  left: 25%;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 460px;\n  padding: 10px;\n  border-radius: 5px;\n  border: 1px solid blue;\n  background-color: #d7daec;\n`;\n","import { Box, Shell } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return (\n    <Shell>\n      <Box>{children}</Box>;\n    </Shell>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { RenderContacts } from '../components/RenderContactsList/RenderContactsList';\nimport { Container } from 'components/Container/Container';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <RenderContacts />\n    </Container>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","styled","Label","Container","Title","Button","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","isNameInContact","useSelector","find","contact","toLocaleLowerCase","data","handleNameChange","e","target","value","resetForm","onSubmit","preventDefault","alert","addContact","TextField","fullWidth","size","type","label","onChange","pattern","title","required","minlength","maxlength","prototype","PropTypes","Filter","sx","width","findContact","List","Item","RenderContacts","normalizeFilter","toLowerCase","visibleContact","includes","map","onClick","deleteContact","id","onDelete","Shell","background","Box","children","Contacts","useEffect","fetchContacts","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}